name: Security & Compliance

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]
    paths:
      - '**/*.py'
      - 'requirements.txt'
      - '.github/workflows/security.yml'
  schedule:
    - cron: '0 3 * * *'

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  secret-scan:
    name: 🔑 Secret Leakage Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --redact --no-banner -v
        continue-on-error: true
      - name: Upload Gitleaks Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: gitleaks*.json

  dependency-audit:
    name: 📦 Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install tooling
        run: |
          python -m pip install --upgrade pip
          pip install safety pip-audit
      - name: Safety Scan
        run: safety check -r requirements.txt --full-report || true
      - name: pip-audit (Advisory DB)
        run: pip-audit -r requirements.txt -f json -o pip-audit.json || true
      - name: Upload dependency reports
        uses: actions/upload-artifact@v4
        with:
          name: dependency-audit
          path: |
            pip-audit.json

  code-security:
    name: 🛡️ Static Code Security
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
            python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install bandit
      - name: Bandit Scan
        run: bandit -r src -f json -o bandit.json || true
      - name: Upload Bandit report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit.json

  container-scan:
    name: 🐳 Container Image Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build image (no push)
        run: docker build -t app-sec-scan .
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: app-sec-scan
          format: 'table'
          output: 'trivy-image.txt'
          severity: 'CRITICAL,HIGH'
        continue-on-error: true
      - name: Upload Trivy report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-image-report
          path: trivy-image.txt

  aggregate:
    name: 📊 Aggregate Security Status
    runs-on: ubuntu-latest
    needs: [secret-scan, dependency-audit, code-security, container-scan]
    steps:
      - name: Summarize
        run: |
          echo "Security scans completed. Review artifacts for details." > summary.txt
      - uses: actions/upload-artifact@v4
        with:
          name: security-summary
          path: summary.txt
